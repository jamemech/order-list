<!DOCTYPE html>
<html>

<head>
    <title>Inventory</title>

    <style>
        table {
            border-collapse: collapse;
            table-layout: fixed;
        }

        th,
        td {
            border: 1px solid #eee;
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #eee;
        }

        td {
            height: 87px;
            word-break: break-all;
        }

        input {
            width: 100%;
        }
    </style>
</head>

<body>
    <h1 style="font-size: 26px;">Inventory</h1>

    <button class="create-btn">Create</button>

    <table>
        <tr>
            <th style="width: 180px;">ID</th>
            <th style="width: 180px;">Name</th>
            <th style="width: 180px;">Price</th>
            <th style="width: 180px;">Type</th>
            <th style="width: 180px;">Image</th>
            <th style="width: 180px;">Status</th>
        </tr>

        <% data.forEach(product=> { %>
            <tr data-id="<%= product.id %>" data-name="<%= product.name %>" data-price="<%= product.price %>"
                data-type="<%= product.type %>" data-image="<%= product.image %>" data-status="<%= product.status %>">

                <td>
                    <%= String(product.id).padStart(3, '0' ) %>
                </td>

                <td style=" text-align: left;">
                    <%= product.name %>
                </td>

                <td style="text-align: right;">
                    <%= product.price.toLocaleString('th-TH', { minimumFractionDigits: 2 }) %> à¸¿
                </td>

                <td>
                    <%= product.type %>
                </td>

                <td style="position: relative;">
                    <img src="/uploads/<%= product.image %>" style="width: 100%; height: 100%; display: block;">
                    <button class="upload-btn" style="position: absolute; bottom: 8px; left: 8px;">Upload</button>
                </td>

                <td style="text-align: left;">
                    <select name="status" class="select-status">
                        <option value="Inactive" <%=product.status==='Inactive' && 'selected' %>>Inactive</option>
                        <option value="Active" <%=product.status==='Active' && 'selected' %>>Active</option>
                    </select>
                    <br>
                    <br>
                    <button class="edit-btn">Edit</button><br>
                    <button class="delete-btn">Delete</button>
                </td>
            </tr>
            <% }) %>
    </table>
    <br>

    <script>
        const btn = (text, click) => {
            const btn = document.createElement("button")
            btn.textContent = text
            btn.onclick = click
            return btn
        }

        const getCookie = (name) => {
            const value = `; ${document.cookie}`
            const parts = value.split(`; ${name}=`)
            if (parts.length === 2) return parts.pop().split(';').shift()
            return null
        }

        document.querySelector(".create-btn").addEventListener("click", () => {
            const modal = document.getElementById("modal")
            const modalControl = document.getElementById("modalControl")

            const closeModal = () => {
                modal.style.display = "none"
            }

            const saveBtn = btn("Save", async () => {
                const nameInput = document.getElementById("nameInput").value
                const priceInput = document.getElementById("priceInput").value
                const typeInput = document.getElementById("typeInput").value

                const productData = {
                    name: nameInput,
                    price: parseFloat(parseFloat(priceInput).toFixed(2)),
                    type: typeInput
                }

                const token = getCookie('token')
                if (!token) {
                    return
                }

                const response = await fetch("http://localhost:3000/inventory/create", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${token}`
                    },
                    body: JSON.stringify(productData)
                })

                const data = await response.json()
                if (!response.ok && data.errors) {
                    const errorMessages = data.errors.map(err => err.msg).join("\n")
                    alert(errorMessages)
                    return
                }

                closeModal()
                window.location.href = "/inventory"
            })

            const cancelBtn = btn("Cancel", closeModal)

            modalControl.innerHTML = ""
            modalControl.appendChild(saveBtn)
            modalControl.appendChild(cancelBtn)
            modal.style.display = "flex"
        })

        document.querySelectorAll(".edit-btn").forEach(button => {
            button.addEventListener("click", () => {
                document.querySelectorAll("button").forEach(btn => btn.disabled = true)

                const row = button.closest("tr")
                const id = row.dataset.id
                const current = {
                    name: row.dataset.name,
                    price: row.dataset.price,
                    type: row.dataset.type
                }

                row.cells[1].innerHTML = `<input type="text" value="${current.name}">`
                row.cells[2].innerHTML = `<input type="number" value="${current.price}">`
                row.cells[3].innerHTML = `<input type="text" value="${current.type}">`

                const saveBtn = btn("Save", async () => {
                    const inputs = row.querySelectorAll("input")
                    const productData = {
                        name: inputs[0].value,
                        price: parseFloat(parseFloat(inputs[1].value).toFixed(2)),
                        type: inputs[2].value
                    }

                    const token = getCookie('token')
                    if (!token) {
                        return
                    }

                    const response = await fetch("http://localhost:3000/inventory/edit", {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                            "Authorization": `Bearer ${token}`
                        },
                        body: JSON.stringify({ id, ...productData })
                    })

                    const data = await response.json()
                    if (!response.ok && data.errors) {
                        const errorMessages = data.errors.map(err => err.msg).join("\n")
                        alert(errorMessages)
                        return
                    }

                    location.reload()
                })

                const cancelBtn = btn("Cancel", () => location.reload())

                button.replaceWith(saveBtn)
                saveBtn.after(cancelBtn)
            })
        })

        document.querySelectorAll(".select-status").forEach(select => {
            select.addEventListener("change", async () => {
                const row = select.closest("tr")
                const id = row.dataset.id
                const status = select.value

                const token = getCookie('token')
                if (!token) {
                    return
                }

                await fetch("http://localhost:3000/inventory/status", {
                    method: "PATCH",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${token}`
                    },
                    body: JSON.stringify({ id, status })
                })
            })
        })

        document.querySelectorAll(".upload-btn").forEach(button => {
            button.addEventListener("click", () => {
                const id = button.closest("tr").dataset.id
                const input = document.createElement("input")
                input.type = "file"
                input.accept = "image/*"
                input.click()

                input.addEventListener("change", async () => {
                    const image = input.files[0]
                    if (!image) return

                    const formData = new FormData()
                    formData.append("id", id)
                    formData.append("image", image)

                    const token = getCookie('token')
                    if (!token) {
                        return
                    }

                    await fetch("http://localhost:3000/inventory/upload", {
                        method: "PATCH",
                        headers: {
                            "Authorization": `Bearer ${token}`
                        },
                        body: formData
                    })

                    location.reload()
                })
            })
        })

        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", async () => {
                const row = button.closest("tr")
                const id = row.dataset.id
                if (!confirm("Delete product")) return

                const token = getCookie('token')
                if (!token) {
                    return
                }

                await fetch("http://localhost:3000/inventory/delete", {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${token}`
                    },
                    body: JSON.stringify({ id })
                })

                location.reload()
            })
        })
    </script>

    <div id="modal" style="
    display: none;
    position: fixed;
    inset: 0;
    background: #00000080;
    padding-left: 190px;
    align-items: flex-start;
">
        <div style="
        background: #fff;
        margin-top: 40px;
        padding: 24px;
        border-radius: 8px;
        width:580px;
        max-height: 80%;
        overflow:auto;
    ">
            <div style="display: flex; gap: 10px; margin-bottom: 10px;">
                <input id="nameInput" placeholder="Name" style="width: 180px;" autocomplete="off">
                <input id="priceInput" type="number" placeholder="Price" style="width: 180px;" autocomplete="off">
                <input id="typeInput" placeholder="Type" style="width: 180px;" autocomplete="off">
            </div>
            <div id="modalControl"></div>
        </div>
    </div>

    <div>
        <a href="/inventory?page=1" style="text-decoration: none; color: black; margin: 0 4px;">
            &lt;&lt;
        </a>

        <a href="/inventory?page=<%= page > 1 ? page - 1 : 1 %>"
            style="text-decoration: none; color: black; margin: 0 4px;">
            &lt;
        </a>

        Page <%= page%> of <%= totalPages %>

                <a href="/inventory?page=<%= page < totalPages ? page + 1 : totalPages %>"
                    style="text-decoration: none; color: black; margin: 0 4px;">
                    &gt;
                </a>

                <a href="/inventory?page=<%= totalPages %>" style="text-decoration: none; color: black; margin: 0 4px;">
                    &gt;&gt;
                </a>
    </div>
</body>

</html>